<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.2.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
    <context:component-scan base-package="com.summer"/>
    <bean id="dinner" class="com.summer.business.Dinner"/>
    <!--自动扫描aop注解-->
    <aop:aspectj-autoproxy/>
    <!--注解aop-->
    <bean id="aopByXml" class="com.summer.aop.AopByXml"/>
    <!--xml aop-->
    <bean id="aopByAnnotate" class="com.summer.aop.AopByAnnotate"/>
    <aop:config>
        <aop:pointcut expression="execution(* com.summer.aop.*.*(..))" id="p1"/> <!--切点-->
        <aop:aspect ref="aopByXml"> <!--切面 -->
            <aop:around method="around" pointcut-ref="p1"/>
            <aop:before method="startTransaction" pointcut-ref="p1"/> <!--前置通知-->
            <aop:after-returning method="commitTransaction" pointcut-ref="p1"/> <!--后置通知-->
        </aop:aspect>
    </aop:config>
    <!--cglib代理-->
    <bean id="sleep" class="com.summer.business.DayISleep"></bean>
    <context:annotation-config/>
    <!--自定义装配bean-->
    <bean id="userH" class="com.summer.beans.User">
        <property name="sex" value="man"/>
        <property name="name" value="hzw"/>
    </bean>
    <bean id="userW" class="com.summer.beans.User">
        <property name="sex" value="woman"/>
        <property name="name" value="wlp"/>
    </bean>
    <bean id="boss" class="com.summer.beans.User">
        <property name="sex" value="man"/>
        <property name="name" value="some"/>
    </bean>
    <bean id="department" class="com.summer.beans.Department">
        <property name="users">
            <list>
                <ref bean="userH"/>
                <ref bean="userW"/>
                <bean class="com.summer.beans.User">
                    <property name="name" value="cwz"/>
                    <property name="sex" value="unKnow"/>
                </bean>
            </list>
        </property>
    </bean>
    <bean id="gillion" class="com.summer.beans.Company"></bean>


    <!--netty托管spring-->
    <bean id="httpServer" class="com.summer.io.inbound.HttpServer">
        <property name="port" value="2100"></property>
        <property name="httpInitializer" ref="httpInitializer"></property>
    </bean>
    <bean id="httpInitializer" class="com.summer.io.inbound.HttpInitializer">
        <property name="handler" ref="inbound"></property>
        <property name="backServerUrls" ref="urls"></property>
    </bean>
    <bean id="urls" class="java.util.ArrayList">
        <constructor-arg>
            <value>http://localhost:8088/api/hello</value>
        </constructor-arg>
    </bean>
    <bean id="inbound" class="com.summer.io.inbound.HttpInboundServerHandler">
        <property name="inputFilter">
            <ref bean="inputFilter"/>
        </property>
        <property name="handlerOne">
            <ref bean="outbound"/>
        </property>
    </bean>
    <bean id="outbound" class="com.summer.io.outbound.HttpOutboundServerHandlerOne">
        <property name="router">
            <ref bean="router"/>
        </property>
        <property name="outFilter">
            <ref bean="outputFilter"/>
        </property>
        <property name="backendUrls">
            <ref bean="urls"/>
        </property>
    </bean>

    <!--filter bean-->
    <bean id="inputFilter" class="com.summer.io.filter.HeaderHttpRequestFilter"></bean>
    <bean id="outputFilter" class="com.summer.io.filter.HeaderHttpResponseFilter"></bean>
    <!--router bean-->
    <bean id="router" class="com.summer.io.router.HttpEndpointRouterImpl"></bean>
</beans>